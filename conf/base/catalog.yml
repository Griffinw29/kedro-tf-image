# Here you can define all your data sets by using simple YAML syntax.
#
# Documentation for this file format can be found in "The Data Catalog"
# Link: https://kedro.readthedocs.io/en/stable/05_data/01_data_catalog.html
#
# We support interacting with a variety of data stores including local file systems, cloud, network and HDFS
#
# An example data set definition can look as follows:
#
#bikes:
#  type: pandas.CSVDataSet
#  filepath: "data/01_raw/bikes.csv"
#
#weather:
#  type: spark.SparkDataSet
#  filepath: s3a://your_bucket/data/01_raw/weather*
#  file_format: csv
#  credentials: dev_s3
#  load_args:
#    header: True
#    inferSchema: True
#  save_args:
#    sep: '|'
#    header: True
#
#scooters:
#  type: pandas.SQLTableDataSet
#  credentials: scooters_credentials
#  table_name: scooters
#  load_args:
#    index_col: ['name']
#    columns: ['name', 'gear']
#  save_args:
#    if_exists: 'replace'
#    # if_exists: 'fail'
#    # if_exists: 'append'
#
# The Data Catalog supports being able to reference the same file using two different DataSet implementations
# (transcoding), templating and a way to reuse arguments that are frequently repeated. See more here:
# https://kedro.readthedocs.io/en/stable/05_data/01_data_catalog.html
#
# This is a data set used by the "Hello World" example pipeline provided with the project
# template. Please feel free to remove it once you remove the example pipeline.

example_iris_data:
  type: pandas.CSVDataSet
  filepath: data/01_raw/iris.csv


imageset:
  type: PartitionedDataSet
  dataset: {
      "type": "kedro_tf_image.extras.datasets.tf_image_dataset.TfImageDataSet",
      "preprocess_input": "tensorflow.keras.applications.resnet50.preprocess_input",
      "imagedim": 224
  }
  path: data/01_raw/imageset
  filename_suffix: ".jpg"

skintype_data:
  type: pandas.CSVDataSet
  filepath: data/01_raw/skintype.csv

imagefolder:
  type: kedro_tf_image.extras.datasets.tf_image_folder.TfImageFolder
  folderpath: "/home/a/archer/beapen/scratch/dermnet/train/rosacea-pd/tf"
  load_args: {
    "validation_split": 0.2,
    "seed": 123,
    "image_size": (224, 224),
    "batch_size": 1
  }

dgacne:
  type: PartitionedDataSet
  dataset: kedro_tf_image.extras.datasets.tf_image_generic.TfImageGeneric
  path: data/01_raw/acne
  filename_suffix: ".jpg"

tfmodel:
  type: tensorflow.TensorFlowModelDataset
  filepath: data/06_models/f7d2b8ca1f18b668d5ee58fb3112ff5c2850e976
  versioned: false

dgcluster:
  type: kedro.extras.datasets.matplotlib.MatplotlibWriter
  filepath: data/07_model_output/cluster

dermatogram:
  type: kedro.extras.datasets.matplotlib.MatplotlibWriter
  filepath: data/07_model_output/dermatogram